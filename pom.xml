<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.macquarie.fordev</groupId>
    <artifactId>dataiku-otel-service</artifactId>
    <packaging>jar</packaging>
    <version>0.1-SNAPSHOT</version>
    <name>Dataiku OpenTelemetry Service</name>
    <url>http://maven.apache.org</url>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.10.RELEASE</version>
    </parent>

    <properties>
        <downloadSources>true</downloadSources>
        <log4j2.version>2.15.0</log4j2.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <domain_name>capitalcals</domain_name>
        <project_name>dataiku-otel-service</project_name>
        <sprint_branch>${env.USERNAME}</sprint_branch>
        <hub_docker>${env.HUB_DOCKER}</hub_docker>
        <for_docker>${env.FOR_DOCKER}</for_docker>
        <docker_user>${env.DOCKER_USER}</docker_user>
        <docker_pass>${env.DOCKER_PASS}</docker_pass>
        <base_image>base-images/zulu-openjdk-alpine:11.0.11-11.48.21-jre-headless</base_image>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.7.4</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.10.0</version>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-sdk</artifactId>
            <version>1.18.0</version>
        </dependency>
        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-prometheus</artifactId>
            <version>1.18.0-alpha</version>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>2.7.0</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>false</failOnWarning>
                            <outputXML>true</outputXML>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!--forkMode>always</forkMode -->
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.1.6.RELEASE</version>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>1.2.0</version>
                <configuration>
                    <from>
                        <image>${for_docker}/${base_image}</image>
                        <auth>
                            <username>${docker_user}</username>
                            <password>${docker_pass}</password>
                        </auth>
                    </from>
                    <to>
                        <image>${for_docker}/${project_name}/${project.artifactId}:${sprint_branch}</image>
                        <auth>
                            <username>${docker_user}</username>
                            <password>${docker_pass}</password>
                        </auth>
                    </to>
                    <allowInsecureRegistries>true</allowInsecureRegistries>
                </configuration>
            </plugin>
            <plugin>
                <!--Plugin to create a container.name property with the dash's removed-->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>regex-property</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>container.name</name>
                            <value>${project.artifactId}</value>
                            <regex>-(.)</regex>
                            <replacement>$1</replacement>
                            <failIfNoMatch>true</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target</outputDirectory>
                            <delimiters>
                                <delimiter>{{*}}</delimiter>
                            </delimiters>
                            <resources>
                                <resource>
                                    <directory>${maven.multiModuleProjectDirectory}/deployment</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${maven.multiModuleProjectDirectory}/pipeline/templates/mgls</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>package-config-dev</id>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/resources/dev-config.xml</descriptor>
                            </descriptors>
                            <finalName>dev-config</finalName> <!-- name without extension -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>package-config-prod</id>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/resources/prod-config.xml</descriptor>
                            </descriptors>
                            <finalName>prod-config</finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <snapshotRepository>
            <id>artifactory.snapshot</id>
            <name>MOST Snapshots</name>
            <url>https://artifactory.devtools.syd.c1.macquarie.com:443/artifactory/most-snapshot</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
        <repository>
            <id>artifactory.central</id>
            <name>MOST Releases</name>
            <url>https://artifactory.devtools.syd.c1.macquarie.com:443/artifactory/most-releases</url>
        </repository>
    </distributionManagement>
</project>